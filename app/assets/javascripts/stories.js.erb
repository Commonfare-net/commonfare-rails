document.addEventListener("turbolinks:load", function() {
  Ellipsis({
    lines: 3,
  });
  Ellipsis({
    class: '.story-card-title-link',
    lines: 3,
  })
  Ellipsis({
    class: '.story-ribbon',
    lines: 2,
  });
});

document.addEventListener('trix-initialize', function(e){
  trix = e.target;
  toolBar = trix.toolbarElement;

  // Button for uploading image
  button = document.createElement("button");
  button.setAttribute("type", "button");
  button.setAttribute("class", "trix-button trix-button--icon trix-button--image");
  button.setAttribute("data-trix-attribute", "x-attach");
  button.setAttribute("title", '<%= _("Attach a file") %>');
  button.setAttribute("tabindex", "-1");
  // The button icon is defined in CSS

  if (document.querySelectorAll('.trix-button--image').length === 0) {
    uploadButton = toolBar.querySelector('.trix-button-group.trix-button-group--text-tools').appendChild(button);
    uploadButton.addEventListener('click', uploadImage);
  }

  // Button for embedding video
  vButton = document.createElement("button");
  vButton.setAttribute("type", "button");
  vButton.setAttribute("class", "trix-button trix-button--icon trix-button--video");
  vButton.setAttribute("data-trix-attribute", "embed-video");
  vButton.setAttribute("title", '<%= _("Embed a video") %>');
  vButton.setAttribute("tabindex", "-1");
  // The button icon is defined in CSS

  if (document.querySelectorAll('.trix-button--video').length === 0) {
    toolBar.querySelector('.trix-button-group.trix-button-group--text-tools').appendChild(vButton);
    // filmButton.addEventListener('click', uploadImage);
  }

  var embedVideoDialog = $('#embed-video-dialog').detach();
  embedVideoDialog.appendTo($('.trix-dialogs'));

  $('#embed-video-dialog').on('click', '#embed-button', function(e) {
    var element = document.querySelector("trix-editor");
    var embedVideoInput = $('input[name="embed-video"]');
    var embedCode = embedVideoInput.val();
    var attachment = new Trix.Attachment({ content: embedCode })
    element.editor.insertAttachment(attachment);
    $('.trix-button--video').removeClass('trix-active');
    $('.trix-button--video').removeAttr('data-trix-active');
  });
});

function uploadImage() {
  // Create a temporary file input
  fileInput = document.createElement("input");
  fileInput.setAttribute("type", "file");
  fileInput.setAttribute("multiple", "");

  // Add listener on change for this file input
  fileInput.addEventListener("change", function(event) {
    var file, _i, _len, _ref, _results;
    _ref = this.files;
    _results = [];
    // Getting files
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      file = _ref[_i];
      // pushing them to Trix
      _results.push(trix.editor.insertFile(file));
    }
    return _results;
  })
  // Then virtually click on it
  fileInput.click()
}

function disableButton(button, text) {
  if (!button.prop('disabled')) {
    button.prop('disabled', 'disabled');
    button.prop('value', text);
  }
}

function enableButton(button, text) {
  if (button.prop('disabled')) {
    button.prop('disabled', false);
    button.prop('value', text);
  }
}
