<%= f.error_notification %>
<%= f.input :title,
            label: _('Give a title to your content'),
            required: false,
            placeholder: _('e.g. There and back again') %>
<%= f.input :content,
            label: _('Write here'),
            as: :trix_editor,
            required: false,
            hint: _("Please don't be too short (min. 500 chars)") %>
<%= f.input :place,
            label: _('Where is this set?'),
            required: false,
            placeholder: _('e.g. Milan, Italy'),
            hint: _('City, Region, Country') %>
<%= f.association :tags,
            label: _('Tags'),
            # placeholder: "Managed in JS",
            hint: _('Use comma or press Enter to separate tags') %>
<%= f.input :anonymous,
            inline_label: _('Publish anonymously') %>

<div class="trix-dialog trix-dialog--link trix-active" data-trix-dialog="embed-video" data-trix-dialog-attribute="embed-video" id="embed-video-dialog">
  <div class="trix-dialog__link-fields">
    <input name="embed-video" class="trix-input trix-input--dialog" placeholder="Paste the embed code" required="" data-trix-input="" type="text">
    <div class="trix-button-group">
      <input class="trix-button trix-button--dialog" id="embed-button" value="Embed" data-trix-method="setAttribute" type="button">
    </div>
  </div>
</div>

<%= content_for :scripts do %>
  <script type="text/javascript">
    (function() {
      var createStorageKey, host, uploadAttachment, deleteAttachment;
      publishButton = $('#publish-button');

      Trix.config.attachments.preview.caption = {
        name: false,
        size: false
      };

      document.addEventListener("trix-attachment-add", function(event) {
        var attachment;
        attachment = event.attachment;
        if (attachment.file) {
          return uploadAttachment(attachment);
        }
      });

      document.addEventListener("trix-attachment-remove", function(event) {
        var attachment;
        attachment = event.attachment;
        var url = attachment.attachment.previewURL
        var image_id = /images\/(\d+)/.exec(url)[1]
        return deleteAttachment(attachment, image_id);
      });

      host = "<%= commoner_images_url(@commoner) %>";

      deleteAttachment = function(attachment, image_id) {
        var config = {
          headers: {
            'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content'),
            'X-Requested-With': 'XMLHttpRequest'
          }
        }
        axios.delete(host + "/" + image_id, config)
          .then(function(response) {
            if (response.status != 204) {
              // TODO: Show some message and handle this
            }
          })
      }

      uploadAttachment = function(attachment) {
        var file, form, key, xhr;
        file = attachment.file;
        form = new FormData;
        form.append("Content-Type", file.type);
        form.append("image[picture]", file);

        var options = {
          headers: {
            'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content'),
            'X-Requested-With': 'XMLHttpRequest'
          },
          onUploadProgress: function(progressEvent) {
            var progress;
            progress = progressEvent.loaded / progressEvent.total * 100;
            // console.log(progress);
            return attachment.setUploadProgress(progress);
          }
        }


        disableButton(publishButton,
                            '<%= _('Uploading image, please wait...') %>'
                            );
        axios.post(host, form, options)
          .then(function(response) {
            // console.log(response);
            if (response.status === 200) {
              var href, url;
              url = href = response.data.url;
              enableButton(publishButton,
                                  '<%= _('Publish') %>'
                                 );
              return attachment.setAttributes({
                url: url,
                href: href
              });
            }
          })
          .catch(function (error) {
            enableButton(publishButton,
                                '<%= _('Publish') %>'
                               );
            // console.log(error);
            // TODO: Show some message and handle this
          });
      };

    }).call(this);

    // Select2 for tags
    $('#story_tag_ids').select2({
      theme: 'bootstrap',
      placeholder: "<%= _('e.g. Pregnancy, Food sharing, etc.') %>",
      minimumResultsForSearch: -1,
      tags: true,
      tokenSeparators: [',']
    });
    $('#story_tag_ids').on('select2:select', function (e) {
      // console.log(data.text);
    });
  </script>
<% end %>
