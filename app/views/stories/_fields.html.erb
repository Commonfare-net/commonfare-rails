<%= f.error_notification %>
<%= f.input :title,
            label: _('Give a title to your content'),
            required: false,
            placeholder: _('e.g. There and back again') %>
<%= f.input :content,
            label: _('Write here'),
            as: :trix_editor,
            required: false,
            hint: _("Please don't be too short (min. 500 chars)") %>
<%= f.input :place,
            label: _('Where is this set?'),
            required: false,
            placeholder: _('e.g. Milan, Italy'),
            hint: _('City, Region, Country') %>
<%= f.association :tags,
            label: _('Tags'),
            # placeholder: "Managed in JS",
            hint: _('Use comma or press Enter to separate tags') %>
<%= f.button :submit, s_('Story form button|Publish'), class: 'btn btn-success btn-block' %>

<%= content_for :scripts do %>
  <script type="text/javascript">
    (function() {
      var createStorageKey, host, uploadAttachment, deleteAttachment;

      Trix.config.attachments.preview.caption = {
        name: false,
        size: false
      };

      document.addEventListener("trix-attachment-add", function(event) {
        var attachment;
        attachment = event.attachment;
        if (attachment.file) {
          return uploadAttachment(attachment);
        }
      });

      document.addEventListener("trix-attachment-remove", function(event) {
        var attachment;
        attachment = event.attachment;
        var url = attachment.attachment.previewURL
        var image_id = /images\/(\d+)/.exec(url)[1]
        return deleteAttachment(attachment, image_id);
      });

      host = "<%= commoner_images_url(@commoner) %>";

      deleteAttachment = function(attachment, image_id) {
        fetch(host + "/" + image_id, {
          method: "DELETE",
          headers: {
            'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content'),
            'X-Requested-With': 'XMLHttpRequest'
          },
          credentials: 'same-origin'
        })
        .then(function(response) {
          if (!response.ok) {
            // TODO: Show some message and handle this
          }
        })
      }

      uploadAttachment = function(attachment) {
        var file, form, key, xhr;
        file = attachment.file;
        form = new FormData;
        form.append("Content-Type", file.type);
        form.append("image[picture]", file);
        fetch(host, {
          method: "POST",
          body: form,
          headers: {
            'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content'),
            'X-Requested-With': 'XMLHttpRequest'
          },
          credentials: 'same-origin'
        })
        .then(function(response) {
          if (response.ok) {
            return response.json();
          }
        })
        .then(function(json) {
          var href, url;
          url = href = json.url;
          return attachment.setAttributes({
            url: url,
            href: href
          });
        })
      };

    }).call(this);

    // Select2 for tags
    $('#story_tag_ids').select2({
      theme: 'bootstrap',
      placeholder: "<%= _('e.g. Pregnancy, Food sharing, etc.') %>",
      minimumResultsForSearch: -1,
      tags: true,
      tokenSeparators: [',']
    });
    $('#story_tag_ids').on('select2:select', function (e) {
      // console.log(data.text);
    });
  </script>
<% end %>
